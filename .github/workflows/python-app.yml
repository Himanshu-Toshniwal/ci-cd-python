# CI/CD Pipeline for Python Notes App
# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: Notes App CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -v --tb=short
    
    - name: Test Notes App functionality
      run: |
        python -c "from src.main import NotesApp; app = NotesApp('test.json'); print('Notes App imported successfully')"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy Notes App
        run: |
          echo "Deploying Notes App..."
          echo "âœ… Notes App deployment completed successfully"
          # For actual deployment, you could add:
          # - Docker build and push
          # - Deploy to cloud services (AWS, Azure, GCP)
          # - Update production server
